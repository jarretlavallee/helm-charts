apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cd4pe.fullname" . }}
  labels:
    {{- include "cd4pe.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "cd4pe.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "cd4pe.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8443
              name: https
            - containerPort: 8000
              name: backend
            - containerPort: 7000
              name: dump
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 120
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: ANALYTICS
              value: {{ .Values.analytics | quote }}
            - name: DB_ENDPOINT
              {{- if .Values.dbHost }}
              value: "postgres://{{ .Values.dbHost }}:{{ .Values.dbPort }}/{{ .Values.dbName }}"
              {{- else }}
              value: postgres://{{ include "cd4pe.dbHost" . }}:{{ include "cd4pe.dbPort" . }}/{{ include "cd4pe.dbName" . }}
              {{- end }}
            - name: DB_USER
              {{- if .Values.dbUser }}
              value: {{ .Values.dbUser }}
              {{- else }}
              value: {{ include "cd4pe.dbUser" . }}
              {{- end }}
            - name: DB_PASS
              valueFrom:
                {{- if .Values.dbPasswordSecret }}
                secretKeyRef:
                  name: {{ .Values.dbPasswordSecret }}
                  key: {{ .Values.dbPasswordSecretKey }}
                {{- else }}
                secretKeyRef:
                  name: {{ include "cd4pe.dbSecretName" . }}
                  key: postgresql-password
                {{- end }}
            - name: PFI_SECRET_KEY
              valueFrom:
                {{- if .Values.uniqueIdSecret }}
                secretKeyRef:
                  name: {{ .Values.uniqueIdSecret }}
                  key: {{ .Values.uniqueIdSecretKey }}
                {{- else }}
                secretKeyRef:
                  name: {{ template "cd4pe.fullname" . }}-secret
                  key: uniqueId
                {{- end }}
          {{- if .Values.persistence.enabled }}
          volumeMounts:
          - name: object-store
            mountPath: {{ .Values.persistence.mountPath }}
          {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
      - name: object-store
        persistentVolumeClaim:
          {{- if .Values.persistence.existingClaim }}
          claimName: {{ .Values.persistence.existingClaim }}
          {{- else }}
          claimName: {{ template "cd4pe.fullname" . }}-object-store
          {{- end }}
      {{- end }}    
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
