# Default values for cd4pe.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: puppet/continuous-delivery-for-puppet-enterprise
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "3.x"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# CD4PE Configuration settings

# Enable or disable analytics. Since this is a lab deployment, disabling by default.
analytics: "false"
# PostgreSQL connection information
# These default to the `postgresql` chart values below. They can be overwridden.
# dbHost: "postgresql"
# dbPort: "5432"
# dbName: "cd4pe"
# dbUser: "cd4pe"
# dbPasswordSecret:
# dbPasswordSecretKey:
# Unique ID defaults to randAlphaNum 16 base64 encoded
uniqueId:
uniqueIdSecret:
uniqueIdSecretKey:

# Annotations to prevent regeneration of the secret during helm uprgade
secret:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation

service:
  type: ClusterIP
  loadBalancerIP:
  loadBalancerSourceRanges:
  annotations: {}
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 443
      targetPort: https
      protocol: TCP
      name: https
    - port: 8000
      targetPort: backend
      protocol: TCP
      name: backend
    - port: 7000
      targetPort: dump
      protocol: TCP
      name: dump

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## If defined, PVC must be created manually before volume will be bound
  ## The value is evaluated as a template, so, for example, the name can depend on .Release or .Chart
  ##
  # existingClaim:

  ## Storage class name
  # storageClass:

  mountPath: /disk
  annotations: {}
  accessMode: ReadWriteOnce
  size: 10Gi

# PostgreSQL configuration values
# Additional optionas are available in https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
postgresql:
  image:
    tag: "9.6"
  postgresqlDatabase: "cd4pe"
  postgresqlUsername: "cd4pe"
  # postgresqlPassword can be set or a random password is generate and used

# Inject sidecar containers if desired.
sidecars: []
  ## The example below runs the client for https://smee.io as sidecar container next to cd4pe,
  ## that allows to trigger build behind a firewall.
  ## https://jenkins.io/blog/2019/01/07/webhook-firewalls/#triggering-builds-with-webhooks-behind-a-secure-firewall
  ##
  ## Note: To use it you should go to https://smee.io/new and update the url to the generete one.
  # - name: smee
  #   image: twalter/smee-client:latest
  #   args: ["--port", "8000", "--path", "/gitlab/push", "--url", "https://smee.io/new"]

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
